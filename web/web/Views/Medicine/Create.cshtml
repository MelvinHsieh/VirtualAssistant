@model web.Models.MedicineModel

@{
    ViewData["Title"] = "Medicijn aanmaken";
}

<h4>Nieuw medicijn aanmaken</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label class="control-label">Naam</label>
                <input id="Name" class="form-control" />
            </div>
            <div class="form-group">
                <label class="control-label">Indicatie (waarom wordt dit medicijn genomen)</label>
                <input id="Indication" class="form-control" />
            </div>
            <div class="form-group">
                <label class="control-label">Dosering</label>
                <input id="Dose" class="form-control" />
            </div>
            <div class="form-group">
                <label class="control-label">Dosering eenheid</label>

                <select name="DoseUnit" id="DoseUnit" class="form-select">
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Vorm</label>

                <select name="Shape" id="Shape" class="form-select">
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Kleur</label>

                <select name="Color" id="Color" class="form-select">
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Type</label>

               <select name="Type" id="Type" class="form-select">
                </select>
            </div>
            <div class="form-group">
                <input type="button" id="submit" value="Aanmaken" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Terug naar overzicht</a>
</div>

@section Scripts {
    <script>
        let apiUrl = "https://localhost:44385/api";

    async function loadSelect(url, select) {
          const response = await fetch(apiUrl + url)
            .then((response) => {
            return response.json()
            })
            .then((data) => {
                var x = document.getElementById(select);

                data.forEach((item, key) => {
                    var option = document.createElement("option");
                    option.text = item;
                    option.value = item;
                    x.add(option);
                });

            })
            .catch((err) => {
            // Do something for an error here
            })
    }

    loadSelect("/DoseUnit", "DoseUnit");
    loadSelect("/MedicineColor", "Color");
    loadSelect("/MedicineShape", "Shape");
    loadSelect("/MedicineType", "Type");


    document.getElementById("submit").addEventListener("click", function () {
        let name = document.getElementById("Name").value;
        let indication = document.getElementById("Indication").value;
        let dose = document.getElementById("Dose").value;
        let doseUnit = document.getElementById("DoseUnit").value;
        let shape = document.getElementById("Shape").value;
        let color = document.getElementById("Color").value;
        let type = document.getElementById("Type").value;

        var xhr = new XMLHttpRequest();
        var url = apiUrl + "/Medicine";
        xhr.open("POST", url, true);
        xhr.setRequestHeader("Content-Type", "application/json");

        var data = JSON.stringify(
            {
                "name": name, 
                "indication": indication,
                "dose": dose,
                "doseUnit": doseUnit,
                "shape": shape,
                "color": color,
                "type": type
            }
        );

        xhr.send(data);
                console.log(window.location.origin);
        window.location.replace(window.location.origin + "/Medicine");
    });

    </script>
}
